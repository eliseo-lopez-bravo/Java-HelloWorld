plugins {
    id 'java'
    id 'war'
}

group = 'com.example'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'lib', include: '*.jar')
}

// Define the directories
def classesDir = file("${buildDir}/classes/java/main")
def webDir = file("./WebContent")
def warBuildDir = file("./build")

tasks.register('cleanBuild', Delete) {
    delete classesDir
    delete 'build'
}

tasks.named('clean') {
    dependsOn 'cleanBuild'
}

// Initialization task to prepare the classes directory and copy non-Java files
tasks.register('initialize') {
    dependsOn 'clean'
    doLast {
        mkdir classesDir
        copy {
            from 'src'
            include '**/*.*'
            exclude '**/*.java'
            into classesDir
        }
    }
}

// Compile Java files and output to classes directory
tasks.named('compileJava') {
    dependsOn 'initialize'
    destinationDirectory.set(classesDir)
    options.compilerArgs << '--release' << '21' // Java release 21
}

tasks.named('war') {
    dependsOn 'compileJava'
    destinationDirectory.set(warBuildDir)
    archiveFileName = 'root.war'
    
    // Include compiled classes in WEB-INF/classes
    from(classesDir) {
        into 'WEB-INF/classes'
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    
    // Set the web content directory
    from(webDir) {
        include '**/*'
    }
}

defaultTasks 'war'
